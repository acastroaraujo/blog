{
  "hash": "3e0b90a4558d9f0d5ff9cb419e5c9467",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Reactive Simulations\"\n#description: |\n  \nauthor: andrés castro araújo\ndate: 2024-02-08\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(shiny)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nN <- 1e5\n\n\n# baseline bias -----------------------------------------------------------\n\nsim <- tibble(\n  s = rbinom(N, 1, 1/2),\n  y0 = rnorm(N, 2000 + 1000*s, 500),\n  y1 = rnorm(N, 3000 + 1000*s, 500),\n  d = rbinom(N, 1, 0.25 + 0.5*s),\n  y = ifelse(as.logical(d), y1, y0)\n)\n\n## E[Y1 | D = 0] = 3000 * 1000 * 0.25\n## E[Y0 | D = 0] = 2000 * 1000 * 0.25\n\n## E[Y1 | D = 0] = 3000 * 1000 * 0.75\n## E[Y0 | D = 0] = 2000 * 1000 * 0.75\n\nsim |> \n  group_by(d) |> \n  summarize(across(c(y0, y1), mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n      d    y0    y1\n  <int> <dbl> <dbl>\n1     0 2244. 3245.\n2     1 2754. 3753.\n```\n\n\n:::\n\n```{.r .cell-code}\nlm(y ~ d, data = sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = y ~ d, data = sim)\n\nCoefficients:\n(Intercept)            d  \n       2244         1509  \n```\n\n\n:::\n\n```{.r .cell-code}\nlm(y ~ d + s, data = sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = y ~ d + s, data = sim)\n\nCoefficients:\n(Intercept)            d            s  \n     1997.1       1002.8        998.4  \n```\n\n\n:::\n\n```{.r .cell-code}\n# baseline bias + treatment heterogeneity ---------------------------------\n\nsim <- tibble(\n  s = rbinom(N, 1, 1/2),\n  y0 = rnorm(N, 2000 + 1000*s, 500),\n  y1 = rnorm(N, 3000 + 1500*s, 500), ## this is the change\n  d = rbinom(N, 1, 0.25 + 0.5*s),\n  y = ifelse(as.logical(d), y1, y0)\n)\n\n## ATT = 1375 \n## ATU = 1125\n\nsim |> \n  group_by(d) |> \n  summarize(across(c(y0, y1), mean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 3\n      d    y0    y1\n  <int> <dbl> <dbl>\n1     0 2251. 3376.\n2     1 2754. 4124.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreactiveConsole(TRUE)\n\npars <- reactiveValues(N = 1e5)\npars$W <- 1000\n\nsim <- reactive({\n  \n  tibble(\n    s = rbinom(pars$N, 1, 1/2),\n    y0 = rnorm(pars$N, 2000 + 1000*s, 500),\n    y1 = rnorm(pars$N, 3000 + pars$W*s, 500),\n    d = rbinom(pars$N, 1, 0.25 + 0.5*s),\n    y = ifelse(as.logical(d), y1, y0)\n  )\n    \n    \n})\n  \n# tibble(\n#   s = rbinom(sim$N, 1, 1/2),\n#   y0 = rnorm(sim$N, 2000 + 1000*s, 500),\n#   y1 = rnorm(sim$N, 3000 + sim$W*s, 500),\n#   d = rbinom(sim$N, 1, 0.25 + 0.5*s),\n#   y = ifelse(as.logical(d), y1, y0)\n# )\n\n\npars$W <- 1000\nlm(y ~ d + s, data = sim())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = y ~ d + s, data = sim())\n\nCoefficients:\n(Intercept)            d            s  \n       2003         1002          997  \n```\n\n\n:::\n\n```{.r .cell-code}\npars$W <- 6000\nlm(y ~ d + s, data = sim())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = y ~ d + s, data = sim())\n\nCoefficients:\n(Intercept)            d            s  \n       1378         3478         3515  \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}